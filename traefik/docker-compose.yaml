version: '3.8'

services:
  traefik:
    image: traefik:v3.3.6
    container_name: traefik
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=monitoring"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.100000,0.300000,1.200000,5.000000"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--entryPoints.metrics.address=:8899"
      - "--metrics.prometheus.entryPoint=metrics"
    ports:
      - "80:80"
      - "8081:8080"   # Dashboard
      - "8082:8082"   # Métricas para Prometheus
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./config/dynamic.yaml:/etc/traefik/dynamic.yaml:ro
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=web"
    cpus: 2
    mem_limit: 250M

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: unless-stopped
    networks:
      - monitoring
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    cpus: 2
    mem_limit: 250M

  zipkin:
    image: openzipkin/zipkin:latest # Use uma versão específica se preferir
    container_name: zipkin
    restart: unless-stopped
    networks:
      - monitoring # Conecta à mesma rede do Traefik
    ports:
      # Expõe a porta da UI do Zipkin para o host (opcional)
      - "9411:9411"

networks:
  monitoring:
    external: true

